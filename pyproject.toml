[tool.poetry]
name = "mirrormanager2"
version = "1.0.0"
description = "The application used to managed the Fedora mirrors all over the world."
authors = [
    "Fedora Infrastructure team <admin@fedoraproject.org>",
]
maintainers = [
    "Aur√©lien Bompard <aurelien@bompard.org>",
    "Pierre-Yves Chibon <pingou@pingoured.fr>",
]
homepage = "https://github.com/fedora-infra/mirrormanager2"
repository = "https://github.com/fedora-infra/mirrormanager2"
license = "MIT"
readme = "README.rst"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Framework :: Flask",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: POSIX :: Linux",
]
packages = [
    { include = "mirrormanager2" },
    { include = "tests", format = "sdist" },
]


[tool.poetry.dependencies]
python = "^3.9"
email-validator = "^2.0.0.post2"
flask = "^2.3.2"
flask-admin = "^1.6.1"
flask-oidc = "^2.0.0"
flask-xml-rpc-re = "^0.1.4"
flask-wtf = "^1.1.1"
wtforms = "^3.0.1"
SQLAlchemy = "^1.4.41 || ^2.0.0"
ipy = "^1.1"
dnspython = "^2.4.2"
protobuf = "^4.24.0"
munch = "^4.0.0"
backoff = "^2.2.1"
fedora-messaging = "^3.3.0"

[tool.poetry.group.dev.dependencies]
black = ">=22.6.0"
pytest = "^7.1.2"
pytest-cov = ">=3.0.0"
ruff = ">=0.0.253"
sphinx = ">=6.1.3"
blinker = "^1.6.2"
sphinxcontrib-httpdomain = "^1.8.1"
cloud-sptheme = "^1.10.1.post20200504175005"

# [tool.poetry.scripts]
# report_mirror = { reference = "client/report_mirror", type = "file" }
# mirrorlist_statistics = { reference = "mirrorlist/mirrorlist_statistics", type = "file" }
# mm2_crawler = { reference = "utility/mm2_crawler", type = "file" }
# mm2_emergency-expire-repo = { reference = "utility/mm2_emergency-expire-repo", type = "file" }
# mm2_generate-worldmap = { reference = "utility/mm2_generate-worldmap", type = "file" }
# mm2_get_global_netblocks = { reference = "utility/mm2_get_global_netblocks", type = "file" }
# mm2_get_internet2_netblocks = { reference = "utility/mm2_get_internet2_netblocks", type = "file" }
# mm2_move-devel-to-release = { reference = "utility/mm2_move-devel-to-release", type = "file" }
# mm2_move-to-archive = { reference = "utility/mm2_move-to-archive", type = "file" }
# mm2_propagation = { reference = "utility/mm2_propagation", type = "file" }
# mm2_update-EC2-netblocks = { reference = "utility/mm2_update-EC2-netblocks", type = "file" }
# mm2_update-master-directory-list = { reference = "utility/mm2_update-master-directory-list", type = "file" }
# mm2_umdl2 = { reference = "utility/mm2_umdl2", type = "file" }
# mm2_create_install_repo = { reference = "utility/mm2_create_install_repo", type = "file" }
# mm2_upgrade-install-repo = { reference = "utility/mm2_upgrade-install-repo", type = "file" }


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
select = ["E", "F", "W", "I", "B", "UP"]
line-length = 100
target-version = "py39"

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "S105", "S106"]
"doc/conf.py" = ["E402"]
"mirrormanager2/app.py" = ["E402"]
"mirrormanager2/default_config.py" = ["S105"]
